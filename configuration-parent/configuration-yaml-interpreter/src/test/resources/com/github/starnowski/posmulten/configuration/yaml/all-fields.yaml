default_schema: public
current_tenant_id_property_type:  "VARCHAR(255)"
current_tenant_id_property: "pos.c.ten"
get_current_tenant_id_function_name: "get_ten_id"
set_current_tenant_id_function_name: "set_tenant"
equals_current_tenant_identifier_function_name: "equals_cur_tenant"
tenant_has_authorities_function_name: "_tenant_hast_auth"
force_row_level_security_for_table_owner: true
default_tenant_id_column: "tenant_id"
grantee: "application-user"
set_current_tenant_identifier_as_default_value_for_tenant_column_in_all_tables: true
valid_tenant_value_constraint:
  is_tenant_valid_function_name:  is_t_valid
  is_tenant_valid_constraint_name:  "is_tenant_valid_constraint_SDFA"
  tenant_identifiers_blacklist:
    - invalid_tenant
    - "Some strange tenant ID"
    - "'; DROP ALL TABLES"
tables:
  - name: users
    rls_policy:
      name: users_table_rls_policy
      tenant_column:  tenant_id
      primary_key_definition:
        name_for_function_that_checks_if_record_exists_in_table: "is_user_exists"
        pk_columns_name_to_type:
          id: bigint
  - name: posts
    rls_policy:
      name: "posts_table_rls_policy"
      tenant_column:  tenant_id
      skip_adding_of_tenant_column_default_value: false
      primary_key_definition:
        name_for_function_that_checks_if_record_exists_in_table: "is_post_exists"
        pk_columns_name_to_type:
          id: bigint
    foreign_keys:
      - constraint_name:  "posts_users_tenant_constraint"
        table_name: "users"
        foreign_key_primary_key_columns_mappings:
          user_id:  id
  - name: "comments"
    rls_policy:
      name: comments_table_rls_policy
      tenant_column:  tenant
      skip_adding_of_tenant_column_default_value: true
      primary_key_definition:
        name_for_function_that_checks_if_record_exists_in_table: "is_comment_exists"
        pk_columns_name_to_type:
          id: int
          user_id: bigint
    foreign_keys:
      - constraint_name:  "comments_users_tenant_constraint"
        table_name: users
        foreign_key_primary_key_columns_mappings:
          user_id:  id
      - constraint_name:  "comments_posts_tenant_constraint"
        table_name: posts
        foreign_key_primary_key_columns_mappings:
          post_id:  id
      - constraint_name:  "comments_comment_parent_tenant_constraint"
        table_name: comments
        foreign_key_primary_key_columns_mappings:
          parent_comment_id:  id
          parent_comment_user_id:  user_id
  - name: notifications
    rls_policy:
      name: notifications_table_rls_policy
      tenant_column:  tenant
      create_tenant_column_for_table: true
      valid_tenant_value_constraint_name: "is_tenant_id_valid"
      primary_key_definition:
        name_for_function_that_checks_if_record_exists_in_table: "is_notification_exists"
        pk_columns_name_to_type:
          uuid: uuid
    foreign_keys:
      - constraint_name:  "notifications_users_tenant_constraint"
        table_name: users
        foreign_key_primary_key_columns_mappings:
          user_id:  id
  - name: dictionary
    schema: no_other_schema
    rls_policy:
      name: dictionary_table_rls_policy
      tenant_column:  tenant_id
      primary_key_definition:
        name_for_function_that_checks_if_record_exists_in_table: "is_dictionary_exists"
        pk_columns_name_to_type:
          id: bigint
  # table with blank (null) schema
  - name: dictionary_1
    schema:
    rls_policy:
      name: dictionary_1_table_rls_policy
      tenant_column:  tenant_id
      primary_key_definition:
        name_for_function_that_checks_if_record_exists_in_table: "is_dictionary_1_exists"
        pk_columns_name_to_type:
          id: bigint
  # table with null schema
  - name: dictionary_2
    schema:
    rls_policy:
      name: dictionary_2_table_rls_policy
      tenant_column:  tenant_id
      primary_key_definition:
        name_for_function_that_checks_if_record_exists_in_table: "is_dictionary_2_exists"
        pk_columns_name_to_type:
          id: bigint
  - name: notifications_1
    rls_policy:
      name: notifications_1_table_rls_policy
      tenant_column:  tenant
      create_tenant_column_for_table: true
    foreign_keys:
      - constraint_name:  "notifications_1_dictionary_tenant_constraint"
        table_name: dictionary
        table_schema: no_other_schema
        foreign_key_primary_key_columns_mappings:
          dictionary_id:  id